unset key
set terminal png
set output '1.png'

# Quelques points exacts
plot [-1:7][-1.3:1.3] "<echo 0.0 0.0", "<echo 2.0943951023931953 0.8660254037844387",\
"<echo 4.1887902047863905 -0.8660254037844384", 0, "<echo 6.28318530717958 0"

# ... Avec un sinus
set output '2.png'
plot [-1:7][-1.3:1.3] "<echo 0.0 0.0", "<echo 2.0943951023931953 0.8660254037844387",\
"<echo 4.1887902047863905 -0.8660254037844384", 0, "<echo 6.28318530717958 0", sin(x)

# Quelques points + bruit = encore pas pire
set output '3.png'
plot [-1:7][-1.3:1.3] "<echo 0 -0.16068223742908105", "<echo 2.0943951023931953 0.671470218772392", "<echo 4.1887902047863905 -0.9004216348004226", 0, sin(x)

$data <<EOF
0.0 0.05357641502543882
0.6283185307179586 -0.42478529196158427
1.2566370614359172 -1.0617772431015764
1.8849555921538759 -0.9051210699241954
2.5132741228718345 -0.5040528604190524
3.141592653589793 0.04102354745591439
3.7699111843077517 0.4246034906683287
4.39822971502571 0.8281348959600916
5.026548245743669 0.8817471593078592
5.654866776461628 0.48540030841142495
EOF

# Points bruités
set output '4.png'
plot [-1:7][-1.3:1.3] $data

set output '5.png'
# Plus de points = meilleure approximation
plot [-1:7][-1.3:1.3] $data, sin(x+pi)

set output '6.png'
# Résistance à la multiplication par une constante & addition d'une constante
plot [-1:7][-2:16] $data using 1:(2*$2+13), 2*sin(x+pi)+13,sin(x+pi)

